{"version":3,"sources":["services/API-service.js","components/FilterInput/index.js","components/FiltersList/index.js","components/CharacterCard/index.js","components/CharactersList/index.js","components/Loading/index.js","containers/HomePage/index.js","containers/CharacterDetailPage/index.js","components/App/App.js","index.js"],"names":["fetchCharacter","fetch","then","response","json","FilterInput","props","inputType","name","onChangeFilter","valueFilter","react_default","a","createElement","htmlFor","className","type","id","onChange","value","placeholder","concat","propTypes","PropTypes","func","isRequired","string","FilterList","components_FilterInput","CharacterCard","character","image","house","react_router_dom","to","title","src","alt","CharactersList","dataArr","filter","toUpperCase","includes","map","key","components_CharacterCard","Loading","window","scrollTo","addEventListener","event","deltaY","scroll","scrollX","scrollY","HomePage","isFetching","Fragment","components_Loading","FiltersList","components_CharactersList","CharacterDetailPage","this","resetFiltersState","characterId","match","params","getSelectedCharacter","find","parseInt","dateOfBith","patronus","alive","React","Component","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","data","filters","handleFilterOnChange","bind","assertThisInitialized","_this2","setState","prevState","index","objectSpread","currentTarget","classList","toggle","_this$state$data","react_router","exact","path","render","containers_HomePage","routerProps","containers_CharacterDetailPage","ReactDOM","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.b1582b85.chunk.js","sourcesContent":["const URL = `http://hp-api.herokuapp.com/api/characters`;\n\nconst fetchCharacter = () => {\n\treturn fetch(URL).then(response => response.json());\n};\n\nexport default fetchCharacter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.scss';\n\nconst FilterInput = props => {\n\tconst { inputType, name, onChangeFilter, valueFilter } = props;\n\treturn (\n\t\t<div>\n\t\t\t<label htmlFor={name} className=\"visually-hidden\">\n\t\t\t\t{name}\n\t\t\t</label>\n\t\t\t<input\n\t\t\t\tclassName=\"filter-input\"\n\t\t\t\ttype={inputType}\n\t\t\t\tname={name}\n\t\t\t\tid={name}\n\t\t\t\tonChange={onChangeFilter}\n\t\t\t\tvalue={valueFilter}\n\t\t\t\tplaceholder={`${name}...`}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nFilterInput.propTypes = {\n\tinputType: PropTypes.string.isRequired,\n\tname: PropTypes.string.isRequired,\n\tonChangeFilter: PropTypes.func.isRequired,\n\tvalueFilter: PropTypes.string.isRequired\n};\n\nexport default FilterInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FilterInput from '../FilterInput';\nimport './styles.scss';\n\nconst FilterList = props => {\n\tconst { onChangeFilter, valueFilter } = props;\n\n\treturn (\n\t\t<aside>\n\t\t\t<form className=\"characters-filters\">\n\t\t\t\t<legend> > Search your favourite character</legend>\n\t\t\t\t<FilterInput\n\t\t\t\t\tinputType=\"text\"\n\t\t\t\t\tname=\"name\"\n\t\t\t\t\tvalueFilter={valueFilter}\n\t\t\t\t\tonChangeFilter={onChangeFilter}\n\t\t\t\t/>\n\t\t\t</form>\n\t\t</aside>\n\t);\n};\n\nFilterInput.propTypes = {\n\tonChangeFilter: PropTypes.func.isRequired,\n\tvalueFilter: PropTypes.string.isRequired\n};\n\nexport default FilterList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport './styles.scss';\n\nconst CharacterCard = props => {\n\tconst { character } = props;\n\tconst { id, name, image, house } = character;\n\treturn (\n\t\t<Link\n\t\t\tto={`/character-detail/${id}`}\n\t\t\ttitle=\"Show more info\"\n\t\t\tclassName=\"character-card__link\"\n\t\t>\n\t\t\t<div className=\"character-card\">\n\t\t\t\t<header>\n\t\t\t\t\t<img className=\"character-card__img\" src={image} alt={name} />\n\t\t\t\t</header>\n\t\t\t\t<main>\n\t\t\t\t\t<h3 className=\"character-card__title\">{name}</h3>\n\t\t\t\t\t<p className=\"character-card__info\">\n\t\t\t\t\t\t{house ? house : <span>&nbsp;&nbsp;</span>}\n\t\t\t\t\t</p>\n\t\t\t\t</main>\n\t\t\t</div>\n\t\t</Link>\n\t);\n};\n\nCharacterCard.propTypes = {\n\tcharacter: PropTypes.object.isRequired\n};\n\nexport default CharacterCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CharacterCard from '../CharacterCard';\n\nimport './styles.scss';\n\nconst CharactersList = props => {\n\tconst { dataArr, valueFilter } = props;\n\treturn (\n\t\t<section>\n\t\t\t<ul className=\"character-list\">\n\t\t\t\t{dataArr\n\t\t\t\t\t.filter(character => {\n\t\t\t\t\t\treturn valueFilter\n\t\t\t\t\t\t\t? character.name.toUpperCase().includes(valueFilter.toUpperCase())\n\t\t\t\t\t\t\t: true;\n\t\t\t\t\t})\n\t\t\t\t\t.map(character => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li key={character.id}>\n\t\t\t\t\t\t\t\t<CharacterCard character={character} />\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t</ul>\n\t\t</section>\n\t);\n};\n\nCharactersList.propTypes = {\n\tvalueFilter: PropTypes.string.isRequired,\n\tdataArr: PropTypes.array.isRequired\n};\n\nexport default CharactersList;\n","import React from 'react';\nimport './styles.scss';\n\nconst Loading = () => {\n\treturn (\n\t\t<main className=\"loading-page\">\n\t\t\t<p>Loadingggg...</p>\n\t\t</main>\n\t);\n};\n\nexport default Loading;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FiltersList from '../../components/FiltersList';\nimport CharactersList from '../../components/CharactersList';\nimport Loading from '../../components/Loading';\nimport './styles.scss';\n\nwindow.scrollTo(500, 500);\n// window.scroll({ top: 0, left: 500, behavior: 'smooth' });\n\n//Replace vertical scroll by horizontal scroll with just vanilla javascript\nfunction handleReplaceVerticalScroll(event) {\n\t// The deltaY property returns a positive value when scrolling down, and a negative value when scrolling up, otherwise 0\n\t//If truthy (there is scroll..)\n\tif (event.deltaY) {\n\t\t// manually scroll horizonally instead\n\t\twindow.scroll(window.scrollX + event.deltaY * 5, window.scrollY);\n\t}\n\t//Otherwise (no vertical scroll) do nothing\n\treturn;\n}\n\n//Listener on window element\nwindow.addEventListener('wheel', handleReplaceVerticalScroll);\n\nconst HomePage = props => {\n\tconst { isFetching, dataArr, onChangeFilter, valueFilter } = props;\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<header className=\"App__header\">\n\t\t\t\t<h1 className=\"App__title\">Harry Potter Characters!</h1>\n\t\t\t</header>\n\t\t\t{isFetching ? (\n\t\t\t\t//If it is fetching(T), show loading component\n\t\t\t\t<Loading />\n\t\t\t) : (\n\t\t\t\t<main className=\"App__container\">\n\t\t\t\t\t<FiltersList\n\t\t\t\t\t\tdataArr={dataArr}\n\t\t\t\t\t\tonChangeFilter={onChangeFilter}\n\t\t\t\t\t\tvalueFilter={valueFilter}\n\t\t\t\t\t/>\n\t\t\t\t\t<CharactersList dataArr={dataArr} valueFilter={valueFilter} />\n\t\t\t\t</main>\n\t\t\t)}\n\t\t</React.Fragment>\n\t);\n};\n\nHomePage.propTypes = {\n\tisFetching: PropTypes.bool.isRequired,\n\tdataArr: PropTypes.array.isRequired,\n\tonChangeFilter: PropTypes.func.isRequired,\n\tvalueFilter: PropTypes.string.isRequired\n};\n\nexport default HomePage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Loading from '../../components/Loading';\n\nimport './styles.scss';\n\nclass CharacterDetailPage extends React.Component {\n\tcomponentWillUnmount() {\n\t\tthis.props.resetFiltersState();\n\t}\n\n\trender() {\n\t\tconst { props } = this;\n\n\t\tconst { isFetching, dataArr, match } = props;\n\t\tconst { characterId } = match.params;\n\n\t\tconst getSelectedCharacter = characterId => {\n\t\t\treturn dataArr.find(character => character.id === parseInt(characterId));\n\t\t};\n\n\t\t//Another way\n\t\t// const selectedCharacter = dataArr[characterId - 1];\n\n\t\treturn (\n\t\t\t<div className=\"App__detail\">\n\t\t\t\t<header>\n\t\t\t\t\t<Link to=\"/\"> Home </Link>\n\t\t\t\t</header>\n\t\t\t\t{isFetching ? (\n\t\t\t\t\t//If it is fetching(T), show loading component\n\t\t\t\t\t<Loading />\n\t\t\t\t) : (\n\t\t\t\t\t<main className=\"detail-main\">\n\t\t\t\t\t\t<aside>\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tsrc={getSelectedCharacter(characterId).image}\n\t\t\t\t\t\t\t\talt={getSelectedCharacter(characterId).name}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</aside>\n\t\t\t\t\t\t<section>\n\t\t\t\t\t\t\t<header className=\"detail__header\">\n\t\t\t\t\t\t\t\t<h2 className=\"detail__title\">\n\t\t\t\t\t\t\t\t\t{getSelectedCharacter(characterId).name}\n\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t{/* <h3>{getSelectedCharacter(characterId).name}</h3> */}\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tHouse:{' '}\n\t\t\t\t\t\t\t\t{getSelectedCharacter(characterId).house\n\t\t\t\t\t\t\t\t\t? getSelectedCharacter(characterId).house\n\t\t\t\t\t\t\t\t\t: '(No data)'}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tDate of Birth:{' '}\n\t\t\t\t\t\t\t\t{getSelectedCharacter(characterId).dateOfBith\n\t\t\t\t\t\t\t\t\t? getSelectedCharacter(characterId).dateOfBith\n\t\t\t\t\t\t\t\t\t: '(No data)'}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tPatronus:{' '}\n\t\t\t\t\t\t\t\t{getSelectedCharacter(characterId).patronus\n\t\t\t\t\t\t\t\t\t? getSelectedCharacter(characterId).patronus\n\t\t\t\t\t\t\t\t\t: '(No data)'}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t{getSelectedCharacter(characterId).alive\n\t\t\t\t\t\t\t\t\t? 'Alive at the end of the saga'\n\t\t\t\t\t\t\t\t\t: 'Dead at the end of the saga'}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t</main>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nCharacterDetailPage.propTypes = {\n\tisFetching: PropTypes.bool.isRequired,\n\tdataArr: PropTypes.array.isRequired,\n\tresetFiltersState: PropTypes.func.isRequired,\n\tmatch: PropTypes.object.isRequired\n};\n\nexport default CharacterDetailPage;\n","import React from 'react';\nimport fetchCharacter from '../../services/API-service';\nimport { Switch, Route } from 'react-router-dom';\nimport HomePage from '../../containers/HomePage';\nimport CharacterDetailPage from '../../containers/CharacterDetailPage';\nimport './App.scss';\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tdata: {\n\t\t\t\tdataArr: [],\n\t\t\t\tisFetching: true\n\t\t\t},\n\t\t\tfilters: {\n\t\t\t\tvalue: ''\n\t\t\t}\n\t\t};\n\n\t\tthis.handleFilterOnChange = this.handleFilterOnChange.bind(this);\n\t\tthis.resetFiltersState = this.resetFiltersState.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tfetchCharacter().then(data => {\n\t\t\tthis.setState((prevState, index) => {\n\t\t\t\treturn {\n\t\t\t\t\tdata: {\n\t\t\t\t\t\t//Boolean for Loading text\n\t\t\t\t\t\tisFetching: false,\n\t\t\t\t\t\tdataArr: data.map((character, index) => {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...character,\n\t\t\t\t\t\t\t\tid: index + 1\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t});\n\t\t});\n\t}\n\n\thandleFilterOnChange(event) {\n\t\tconst { currentTarget } = event;\n\t\tcurrentTarget.classList.toggle('filter-input-focused');\n\t\tconst value = currentTarget.value;\n\n\t\tthis.setState(prevState => {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t//Doing prevState as expecting more keys in the future\n\t\t\t\t\t...prevState.filters,\n\t\t\t\t\tvalue: value\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t}\n\n\tresetFiltersState() {\n\t\tthis.setState(prevState => {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t...prevState.filters,\n\t\t\t\t\tvalue: ''\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t}\n\n\trender() {\n\t\tconst { dataArr, isFetching } = this.state.data;\n\t\tconst { handleFilterOnChange, resetFiltersState } = this;\n\t\tconst { value } = this.state.filters;\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/\"\n\t\t\t\t\t\trender={() => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<HomePage\n\t\t\t\t\t\t\t\t\tisFetching={isFetching}\n\t\t\t\t\t\t\t\t\tdataArr={dataArr}\n\t\t\t\t\t\t\t\t\tonChangeFilter={handleFilterOnChange}\n\t\t\t\t\t\t\t\t\tvalueFilter={value}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/character-detail/:characterId\"\n\t\t\t\t\t\trender={routerProps => (\n\t\t\t\t\t\t\t<CharacterDetailPage\n\t\t\t\t\t\t\t\tisFetching={isFetching}\n\t\t\t\t\t\t\t\tresetFiltersState={resetFiltersState}\n\t\t\t\t\t\t\t\tdataArr={dataArr}\n\t\t\t\t\t\t\t\tmatch={routerProps.match}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport { HashRouter } from 'react-router-dom';\n\nimport './index.scss';\n\nReactDOM.render(\n\t<HashRouter>\n\t\t<App />\n\t</HashRouter>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}