{"version":3,"sources":["services/API-service.js","components/FilterInput/index.js","components/FiltersList/index.js","components/CharacterCard/index.js","components/CharactersList/index.js","containers/HomePage/index.js","containers/CharacterDetailPage/index.js","components/App/App.js","index.js"],"names":["fetchCharacter","fetch","then","response","json","FilterInput","props","inputType","name","onChangeFilter","valueFilter","react_default","a","createElement","htmlFor","className","type","id","onChange","value","placeholder","propTypes","PropTypes","func","isRequired","string","FilterList","components_FilterInput","CharacterCard","character","image","house","react_router_dom","to","concat","title","src","alt","CharactersList","dataArr","filter","toUpperCase","includes","map","key","components_CharacterCard","window","addEventListener","event","deltaY","scroll","scrollX","scrollY","HomePage","isFetching","Fragment","FiltersList","components_CharactersList","CharacterDetailPage","characterId","match","params","getSelectedCharacter","find","parseInt","dateOfBith","patronus","alive","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","data","filters","handleFilterOnChange","bind","assertThisInitialized","_this2","setState","prevState","index","objectSpread","currentTarget","_this$state$data","react_router","exact","path","render","containers_HomePage","routerProps","containers_CharacterDetailPage","React","Component","ReactDOM","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.a0d2c458.chunk.js","sourcesContent":["const URL = `http://hp-api.herokuapp.com/api/characters`;\n\nconst fetchCharacter = () => {\n\treturn fetch(URL).then(response => response.json());\n};\n\nexport default fetchCharacter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.scss';\n\nconst FilterInput = props => {\n\tconst { inputType, name, onChangeFilter, valueFilter } = props;\n\treturn (\n\t\t<div>\n\t\t\t<label htmlFor={name} className=\"visually-hidden\">\n\t\t\t\t{name}\n\t\t\t</label>\n\t\t\t<input\n\t\t\t\ttype={inputType}\n\t\t\t\tname={name}\n\t\t\t\tid={name}\n\t\t\t\tonChange={onChangeFilter}\n\t\t\t\tvalue={valueFilter}\n\t\t\t\tplaceholder={name}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nFilterInput.propTypes = {\n\tinputType: PropTypes.string.isRequired,\n\tname: PropTypes.string.isRequired,\n\tonChangeFilter: PropTypes.func.isRequired,\n\tvalueFilter: PropTypes.string.isRequired\n};\n\nexport default FilterInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FilterInput from '../FilterInput';\nimport './styles.scss';\n\nconst FilterList = props => {\n\tconst { onChangeFilter, valueFilter } = props;\n\n\treturn (\n\t\t<aside>\n\t\t\t<form className=\"characters-filters\">\n\t\t\t\t<legend>Search your favourite character</legend>\n\t\t\t\t<FilterInput\n\t\t\t\t\tinputType=\"text\"\n\t\t\t\t\tname=\"name\"\n\t\t\t\t\tvalueFilter={valueFilter}\n\t\t\t\t\tonChangeFilter={onChangeFilter}\n\t\t\t\t/>\n\t\t\t</form>\n\t\t</aside>\n\t);\n};\n\nFilterInput.propTypes = {\n\tonChangeFilter: PropTypes.func.isRequired,\n\tvalueFilter: PropTypes.string.isRequired\n};\n\nexport default FilterList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport './styles.scss';\n\nconst CharacterCard = props => {\n\tconst { character } = props;\n\tconst { id, name, image, house } = character;\n\treturn (\n\t\t<Link\n\t\t\tto={`/character-detail/${id}`}\n\t\t\ttitle=\"Show more info\"\n\t\t\tclassName=\"character-card__link\"\n\t\t>\n\t\t\t<div className=\"character-card\">\n\t\t\t\t<header>\n\t\t\t\t\t<img className=\"character-card__img\" src={image} alt={name} />\n\t\t\t\t</header>\n\t\t\t\t<main>\n\t\t\t\t\t<h3 className=\"character-card__title\">{name}</h3>\n\t\t\t\t\t<p className=\"character-card__info\">\n\t\t\t\t\t\t{house ? house : <span>&nbsp;&nbsp;</span>}\n\t\t\t\t\t</p>\n\t\t\t\t</main>\n\t\t\t</div>\n\t\t</Link>\n\t);\n};\n\nCharacterCard.propTypes = {\n\tcharacter: PropTypes.object.isRequired\n};\n\nexport default CharacterCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CharacterCard from '../CharacterCard';\n\nimport './styles.scss';\n\nconst CharactersList = props => {\n\tconst { dataArr, valueFilter } = props;\n\treturn (\n\t\t<section>\n\t\t\t<ul className=\"character-list\">\n\t\t\t\t{dataArr\n\t\t\t\t\t.filter(character => {\n\t\t\t\t\t\treturn valueFilter\n\t\t\t\t\t\t\t? character.name.toUpperCase().includes(valueFilter.toUpperCase())\n\t\t\t\t\t\t\t: true;\n\t\t\t\t\t})\n\t\t\t\t\t.map(character => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li key={character.id}>\n\t\t\t\t\t\t\t\t<CharacterCard character={character} />\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t</ul>\n\t\t</section>\n\t);\n};\n\nCharactersList.propTypes = {\n\tvalueFilter: PropTypes.string.isRequired,\n\tdataArr: PropTypes.array.isRequired\n};\n\nexport default CharactersList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FiltersList from '../../components/FiltersList';\nimport CharactersList from '../../components/CharactersList';\nimport './styles.scss';\n\n//Replace vertical scroll by horizontal scroll with just vanilla javascript\nfunction handleReplaceVerticalScroll(event) {\n\t// The deltaY property returns a positive value when scrolling down, and a negative value when scrolling up, otherwise 0\n\t//If truthy (there is scroll..)\n\tif (event.deltaY) {\n\t\t// manually scroll horizonally instead\n\t\twindow.scroll(window.scrollX + event.deltaY * 5, window.scrollY);\n\t}\n\t//Otherwise (no vertical scroll) do nothing\n\treturn;\n}\n\n//Listener on window element\nwindow.addEventListener('wheel', handleReplaceVerticalScroll);\n\nconst HomePage = props => {\n\tconst { isFetching, dataArr, onChangeFilter, valueFilter } = props;\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<header>\n\t\t\t\t<h1 className=\"App__title\">Harry Potter Characters</h1>\n\t\t\t</header>\n\t\t\t{isFetching ? (\n\t\t\t\t//If it is fetching(T), show loading paragraph\n\t\t\t\t<main>\n\t\t\t\t\t<p>Loading...</p>\n\t\t\t\t</main>\n\t\t\t) : (\n\t\t\t\t<main className=\"App__container\">\n\t\t\t\t\t<FiltersList\n\t\t\t\t\t\tdataArr={dataArr}\n\t\t\t\t\t\tonChangeFilter={onChangeFilter}\n\t\t\t\t\t\tvalueFilter={valueFilter}\n\t\t\t\t\t/>\n\t\t\t\t\t<CharactersList dataArr={dataArr} valueFilter={valueFilter} />\n\t\t\t\t</main>\n\t\t\t)}\n\t\t</React.Fragment>\n\t);\n};\n\nHomePage.propTypes = {\n\tisFetching: PropTypes.bool.isRequired,\n\tdataArr: PropTypes.array.isRequired,\n\tonChangeFilter: PropTypes.func.isRequired,\n\tvalueFilter: PropTypes.string.isRequired\n};\n\nexport default HomePage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './styles.scss';\n\nconst CharacterDetailPage = props => {\n\tconst { isFetching, dataArr, match } = props;\n\tconst { characterId } = match.params;\n\n\tconst getSelectedCharacter = characterId => {\n\t\treturn dataArr.find(character => character.id === parseInt(characterId));\n\t};\n\n\t//Another way\n\t// const selectedCharacter = dataArr[characterId - 1];\n\n\treturn (\n\t\t<div className=\"App__detail\">\n\t\t\t<header>\n\t\t\t\t<Link to=\"/\"> Home </Link>\n\t\t\t\t<h2>Página de detalle</h2>\n\t\t\t</header>\n\t\t\t{isFetching ? (\n\t\t\t\t<main>\n\t\t\t\t\t<p>Loading...</p>\n\t\t\t\t</main>\n\t\t\t) : (\n\t\t\t\t<main className=\"detail-main\">\n\t\t\t\t\t<aside>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc={getSelectedCharacter(characterId).image}\n\t\t\t\t\t\t\talt={getSelectedCharacter(characterId).name}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</aside>\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<h3>{getSelectedCharacter(characterId).name}</h3>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tHouse:{' '}\n\t\t\t\t\t\t\t{getSelectedCharacter(characterId).house\n\t\t\t\t\t\t\t\t? getSelectedCharacter(characterId).house\n\t\t\t\t\t\t\t\t: '(No data)'}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tDate of Birth:{' '}\n\t\t\t\t\t\t\t{getSelectedCharacter(characterId).dateOfBith\n\t\t\t\t\t\t\t\t? getSelectedCharacter(characterId).dateOfBith\n\t\t\t\t\t\t\t\t: '(No data)'}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tPatronus:{' '}\n\t\t\t\t\t\t\t{getSelectedCharacter(characterId).patronus\n\t\t\t\t\t\t\t\t? getSelectedCharacter(characterId).patronus\n\t\t\t\t\t\t\t\t: '(No data)'}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t{getSelectedCharacter(characterId).alive\n\t\t\t\t\t\t\t\t? 'Alive at the end of the saga'\n\t\t\t\t\t\t\t\t: 'Dead at the end of the saga'}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</section>\n\t\t\t\t</main>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nCharacterDetailPage.propTypes = {\n\tisFetching: PropTypes.bool.isRequired,\n\tdataArr: PropTypes.array.isRequired,\n\tmatch: PropTypes.object.isRequired\n};\n\nexport default CharacterDetailPage;\n","import React from 'react';\nimport fetchCharacter from '../../services/API-service';\nimport { Switch, Route } from 'react-router-dom';\nimport HomePage from '../../containers/HomePage';\nimport CharacterDetailPage from '../../containers/CharacterDetailPage';\nimport './App.scss';\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tdata: {\n\t\t\t\tdataArr: [],\n\t\t\t\tisFetching: true\n\t\t\t},\n\t\t\tfilters: {\n\t\t\t\tvalue: ''\n\t\t\t}\n\t\t};\n\n\t\tthis.handleFilterOnChange = this.handleFilterOnChange.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tfetchCharacter().then(data => {\n\t\t\tthis.setState((prevState, index) => {\n\t\t\t\treturn {\n\t\t\t\t\tdata: {\n\t\t\t\t\t\t//Boolean for Loading text\n\t\t\t\t\t\tisFetching: false,\n\t\t\t\t\t\tdataArr: data.map((character, index) => {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...character,\n\t\t\t\t\t\t\t\tid: index + 1\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t});\n\t\t});\n\t}\n\n\thandleFilterOnChange(event) {\n\t\tconst { currentTarget } = event;\n\t\tconst value = currentTarget.value;\n\n\t\tthis.setState(prevState => {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t//Doing prevState as expecting more keys in the future\n\t\t\t\t\t...prevState.filters,\n\t\t\t\t\tvalue: value\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t}\n\n\trender() {\n\t\tconst { dataArr, isFetching } = this.state.data;\n\t\tconst { handleFilterOnChange } = this;\n\t\tconst { value } = this.state.filters;\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/\"\n\t\t\t\t\t\trender={() => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<HomePage\n\t\t\t\t\t\t\t\t\tisFetching={isFetching}\n\t\t\t\t\t\t\t\t\tdataArr={dataArr}\n\t\t\t\t\t\t\t\t\tonChangeFilter={handleFilterOnChange}\n\t\t\t\t\t\t\t\t\tvalueFilter={value}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/character-detail/:characterId\"\n\t\t\t\t\t\trender={routerProps => (\n\t\t\t\t\t\t\t<CharacterDetailPage\n\t\t\t\t\t\t\t\tisFetching={isFetching}\n\t\t\t\t\t\t\t\tdataArr={dataArr}\n\t\t\t\t\t\t\t\tmatch={routerProps.match}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport { HashRouter } from 'react-router-dom';\n\nimport './index.scss';\n\nReactDOM.render(\n\t<HashRouter>\n\t\t<App />\n\t</HashRouter>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}